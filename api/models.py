from django.db import models
from django.utils import timezone

class RedditPost(models.Model):
    approved_at_utc = models.DateTimeField(null=True, blank=True)
    subreddit = models.CharField(max_length=255, blank=True, null=True)
    selftext = models.TextField(blank=True, null=True)
    author_fullname = models.CharField(max_length=255, blank=True, null=True)
    saved = models.BooleanField(default=False, null=True)
    mod_reason_title = models.CharField(max_length=255, null=True, blank=True)
    gilded = models.IntegerField(default=0, null=True)
    clicked = models.BooleanField(default=False, null=True)
    title = models.TextField(blank=True, null=True)
    subreddit_name_prefixed = models.CharField(max_length=255, blank=True, null=True)
    hidden = models.BooleanField(default=False, null=True)
    pwls = models.IntegerField(default=6, null=True)
    link_flair_css_class = models.CharField(max_length=255, null=True, blank=True)
    downs = models.IntegerField(default=0, null=True)
    thumbnail_height = models.IntegerField(blank=True, null=True)
    top_awarded_type = models.CharField(max_length=255, null=True, blank=True)
    hide_score = models.BooleanField(default=True, null=True)
    name = models.CharField(max_length=255, blank=True, null=True)
    quarantine = models.BooleanField(default=False, null=True)
    link_flair_text_color = models.CharField(max_length=50, blank=True, null=True)
    upvote_ratio = models.FloatField(null=True)
    author_flair_background_color = models.CharField(max_length=50, null=True, blank=True)
    subreddit_type = models.CharField(max_length=50, blank=True, null=True)
    ups = models.IntegerField(null=True)
    total_awards_received = models.IntegerField(default=0, null=True)
    thumbnail_width = models.IntegerField(blank=True, null=True)
    author_flair_template_id = models.CharField(max_length=255, null=True, blank=True)
    is_original_content = models.BooleanField(default=False, null=True)
    secure_media = models.JSONField(null=True, blank=True)
    is_reddit_media_domain = models.BooleanField(default=True, null=True)
    is_meta = models.BooleanField(default=False, null=True)
    category = models.CharField(max_length=255, null=True, blank=True)
    secure_media_embed = models.JSONField(null=True, blank=True)
    link_flair_text = models.CharField(max_length=255, null=True, blank=True)
    can_mod_post = models.BooleanField(default=False, null=True)
    score = models.IntegerField(blank=True, null=True)
    approved_by = models.CharField(max_length=255, null=True, blank=True)
    is_created_from_ads_ui = models.BooleanField(default=False, null=True)
    author_premium = models.BooleanField(default=False, null=True)
    thumbnail = models.TextField(blank=True, null=True)
    edited = models.BooleanField(default=False, null=True)
    author_flair_css_class = models.CharField(max_length=255, null=True, blank=True)
    post_hint = models.CharField(max_length=50, blank=True, null=True)
    content_categories = models.JSONField(default=list, blank=True, null=True)
    is_self = models.BooleanField(default=False, null=True)
    mod_note = models.CharField(max_length=255, null=True, blank=True)
    created = models.DateTimeField(default=timezone.now, blank=True, null=True)
    link_flair_type = models.CharField(max_length=50, blank=True, null=True)
    wls = models.IntegerField(default=6, null=True)
    removed_by_category = models.CharField(max_length=255, null=True, blank=True)
    banned_by = models.CharField(max_length=255, null=True, blank=True)
    author_flair_type = models.CharField(max_length=50, blank=True, null=True)
    domain = models.CharField(max_length=255, blank=True, null=True)
    allow_live_comments = models.BooleanField(default=False, null=True)
    selftext_html = models.TextField(null=True, blank=True)
    likes = models.CharField(max_length=50, null=True, blank=True)
    suggested_sort = models.CharField(max_length=50, null=True, blank=True)
    banned_at_utc = models.DateTimeField(null=True, blank=True)
    url_overridden_by_dest = models.TextField(blank=True, null=True)
    view_count = models.IntegerField(null=True, blank=True)
    archived = models.BooleanField(default=False, null=True)
    no_follow = models.BooleanField(default=False, null=True)
    is_crosspostable = models.BooleanField(default=False, null=True)
    pinned = models.BooleanField(default=False, null=True)
    over_18 = models.BooleanField(default=False, null=True)
    preview = models.JSONField(blank=True, null=True)
    all_awardings = models.JSONField(default=list, blank=True, null=True)
    awarders = models.JSONField(default=list, blank=True, null=True)
    media_only = models.BooleanField(default=False, null=True)
    can_gild = models.BooleanField(default=False, null=True)
    spoiler = models.BooleanField(default=False, null=True)
    locked = models.BooleanField(default=False, null=True)
    author_flair_text = models.CharField(max_length=255, null=True, blank=True)
    treatment_tags = models.JSONField(default=list, blank=True)
    num_reports = models.IntegerField(null=True, blank=True)
    distinguished = models.CharField(max_length=50, null=True, blank=True)
    subreddit_id = models.CharField(max_length=50, blank=True, null=True)
    author_is_blocked = models.BooleanField(default=False, null=True)
    mod_reason_by = models.CharField(max_length=255, null=True, blank=True)
    removal_reason = models.CharField(max_length=255, null=True, blank=True)
    link_flair_background_color = models.CharField(max_length=50, blank=True, null=True)
    id = models.CharField(max_length=255, primary_key=True, blank=True)
    is_robot_indexable = models.BooleanField(default=True, null=True)
    report_reasons = models.CharField(max_length=255, null=True, blank=True)
    author = models.CharField(max_length=255, blank=True, null=True)
    discussion_type = models.CharField(max_length=50, null=True, blank=True)
    num_comments = models.IntegerField(default=0, null=True)
    send_replies = models.BooleanField(default=True, null=True)
    whitelist_status = models.CharField(max_length=50, blank=True, null=True)
    contest_mode = models.BooleanField(default=False, null=True)
    author_patreon_flair = models.BooleanField(default=False, null=True)
    author_flair_text_color = models.CharField(max_length=50, null=True, blank=True)
    permalink = models.TextField(blank=True, null=True)
    parent_whitelist_status = models.CharField(max_length=50, blank=True, null=True)
    stickied = models.BooleanField(default=False, null=True)
    url = models.TextField(blank=True, null=True)
    subreddit_subscribers = models.IntegerField(blank=True, null=True)
    created_utc = models.DateTimeField(blank=True, null=True)
    num_crossposts = models.IntegerField(default=0, null=True)
    media = models.JSONField(null=True, blank=True)
    is_video = models.BooleanField(default=False, null=True)

    def __str__(self):
        return self.title